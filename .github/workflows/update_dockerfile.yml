name: Update Caddy Version

on:
  schedule:
    - cron: '0 */12 * * *'  # VÃ©rifie toutes les 12 heures (correction: 5 Ã©toiles)
  workflow_dispatch:  # Permet le dÃ©clenchement manuel

jobs:
  check-and-update:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      pull-requests: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get latest Caddy version
        id: get-version
        run: |
          LATEST_VERSION=$(curl -s https://api.github.com/repos/caddyserver/caddy/releases/latest | jq -r '.tag_name')
          echo "version=$LATEST_VERSION" >> $GITHUB_OUTPUT
          echo "Latest version: $LATEST_VERSION"

      - name: Check current version in Dockerfile
        id: check-version
        run: |
          # Cherche la version actuelle dans le Dockerfile (format: RUN xcaddy build v2.9.1)
          CURRENT_VERSION=$(grep "RUN xcaddy build" Dockerfile | awk '{print $3}')
          
          if [ -z "$CURRENT_VERSION" ]; then
            echo "Could not find current version in Dockerfile"
            exit 1
          fi
          
          echo "current-version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $CURRENT_VERSION"
          echo "Latest version: ${{ steps.get-version.outputs.version }}"

      - name: Update Dockerfile if needed
        id: update-dockerfile
        run: |
          CURRENT_VERSION="${{ steps.check-version.outputs.current-version }}"
          LATEST_VERSION="${{ steps.get-version.outputs.version }}"
          
          if [ "$CURRENT_VERSION" != "$LATEST_VERSION" ]; then
            echo "Updating Dockerfile from $CURRENT_VERSION to $LATEST_VERSION"
            
            # Met Ã  jour la ligne RUN xcaddy build
            sed -i "s/RUN xcaddy build $CURRENT_VERSION/RUN xcaddy build $LATEST_VERSION/" Dockerfile
            # Met Ã  jour la ligne ENV CADDY_VERSION
            sed -i "s/ENV CADDY_VERSION=$CURRENT_VERSION/ENV CADDY_VERSION=$LATEST_VERSION/" Dockerfile
            
            echo "updated=true" >> $GITHUB_OUTPUT
            echo "new-version=$LATEST_VERSION" >> $GITHUB_OUTPUT
          else
            echo "Version is already up to date"
            echo "updated=false" >> $GITHUB_OUTPUT
          fi

      - name: Configure git
        if: steps.update-dockerfile.outputs.updated == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Commit and push changes
        if: steps.update-dockerfile.outputs.updated == 'true'
        run: |
          git add Dockerfile
          git commit -m "chore: update Caddy to ${{ steps.get-version.outputs.version }}"
          git push

      - name: Get current date
        if: steps.update-dockerfile.outputs.updated == 'true'
        id: date
        run: echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

      - name: Log in to the Container registry
        if: steps.update-dockerfile.outputs.updated == 'true'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        if: steps.update-dockerfile.outputs.updated == 'true'
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ steps.date.outputs.date }}
            type=raw,value=${{ steps.get-version.outputs.version }}

      - name: Build and push Docker image
        if: steps.update-dockerfile.outputs.updated == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Create release
        if: steps.update-dockerfile.outputs.updated == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get-version.outputs.version }}
          name: Caddy ${{ steps.get-version.outputs.version }}
          body: |
            ðŸš€ **Mise Ã  jour automatique de Caddy**
            
            Cette release contient la mise Ã  jour vers Caddy ${{ steps.get-version.outputs.version }}.
            
            **Images Docker disponibles:**
            - `ghcr.io/${{ github.repository }}:latest`
            - `ghcr.io/${{ github.repository }}:${{ steps.date.outputs.date }}`
            - `ghcr.io/${{ github.repository }}:${{ steps.get-version.outputs.version }}`
            
            **Changements:**
            - Mise Ã  jour de Caddy vers la version ${{ steps.get-version.outputs.version }}
          generate_release_notes: false
